parameters:
    artifactName: 'nix-drop'
    ext: ''

steps:
    - task: CMake@1
      displayName: 'CMake ZLIB'
      inputs:
          workingDirectory: native/src/thirdparty/zlib
          cmakeArgs: '-DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON'

    - task: CMake@1
      displayName: 'Build ZLIB'
      inputs:
          workingDirectory: native/src/thirdparty/zlib
          cmakeArgs: '--build'

    - task: CMake@1
      displayName: 'CMake SEAL'
      inputs:
          workingDirectory: native/src
          cmakeArgs: '-DCMAKE_BUILD_TYPE=Release -DSEAL_BUILD_SEAL_C=ON -DZLIB_LIBRARY=./thirdparty/zlib/zlib-src/libz.${{parameters.ext}} -DZLIB_INCLUDE_DIR=./thirdparty/zlib/zlib-src/}'

    - task: CMake@1
      displayName: 'Build SEAL'
      inputs:
          workingDirectory: native/src
          cmakeArgs: '--build'

    - script: |
          cd native/tests/thirdparty
          git submodule update --init
      displayName: 'Install Google Test'

    - task: CMake@1
      displayName: 'CMake SEALTest'
      inputs:
          workingDirectory: native/tests
          cmakeArgs: '-DSEAL_DIR=../src/cmake}'
          
    - task: CMake@1
      displayName: 'Build SEALTest'
      inputs:
          workingDirectory: native/tests
          cmakeArgs: '--build}'

    - script: |
          cd $BUILD_SOURCESDIRECTORY
          cd native/bin
          ./sealtest
      displayName: 'Run unit tests'

    - task: UseDotNet@2
      displayName: 'Get .NET Core 3.1 SDK'
      inputs:
        packageType: 'sdk'
        version: '3.1.x'

    - task: DotNetCoreCLI@2
      displayName: 'Run dotnet unit tests'
      inputs:
          command: test
          projects: '**/SEALNetTest.csproj'
          arguments: '--configuration Release --verbosity detailed'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
          SourceFolder: '$(Build.SourcesDirectory)/native/lib'
          Contents: 'libsealc.*'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/native/lib'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: ${{ parameters.artifactName }}